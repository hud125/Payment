<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- https://ibatis.apache.org/docs/dotnet/datamapper/ch03s03.html -->

<mapper namespace="com.aurfy.haze.dao.configuration.channel.BankMapper">

	<!-- result maps -->
	<resultMap id="bankMap" type="BankEntity">
		<id column="bank_id" property="ID" />
		<result column="bank_code" property="bankCode" />
		<result column="bank_abbr" property="bankAbbreviation" />
		<result column="bank_name" property="bankName" />
		<result column="bank_branch" property="bankBranch" />
		<result column="bank_url" property="bankURL" />
		<result column="bank_comments" property="comments" />
		<result column="bank_owner_id" property="ownerId" />
		<result column="bank_cr_dt" property="createDate" jdbcType="TIMESTAMP" javaType="Date" />
		<result column="bank_up_dt" property="updateDate" jdbcType="TIMESTAMP" javaType="Date" />
	</resultMap>

	<insert id="insert" parameterType="BankEntity" >
		INSERT INTO bank 
				(bank_id, bank_code, bank_abbr, bank_name, bank_branch, bank_url, 
				comments, owner_id, create_date, update_date)
		VALUES (#{ID}, #{bankCode}, #{bankAbbreviation}, #{bankName}, #{bankBranch}, #{bankURL}, 
				#{comments}, #{ownerId}, #{createDate}, #{updateDate})
	</insert>

	<sql id="defaultSelect">
		SELECT bk.bank_id, bk.bank_code, bk.bank_abbr, bk.bank_name, bk.bank_branch, bk.bank_url, 
				bk.comments bank_comments, bk.owner_id bank_owner_id, bk.create_date bank_cr_dt, bk.update_date bank_up_dt  FROM bank bk
	</sql>
	
	<select id="selectOne" parameterType="string" resultMap="bankMap">
		<include refid="defaultSelect" />
		 WHERE bk.bank_id = #{ID}
	</select>
	
	<select id="selectBy" resultMap="bankMap">
		<include refid="defaultSelect" />
		<where>
			<if test="filterEntity!=null">
				<if test="filterEntity.ID !=null">
					bank_id = #{filterEntity.ID}
				</if>
				
			</if>
		</where>
		LIMIT #{startIndex}, #{fetchRows}
	</select>
	<select id="selectAll" resultMap="bankMap">
		<include refid="defaultSelect" />
	</select>

	<sql id="defaultCount">
		SELECT count(*) FROM bank
	</sql>
	<select id="countBy"  resultType="int">
		<include refid="defaultCount" />
		<where>
			<if test="filterEntity!=null">
				<if test="filterEntity.ID !=null">
					bank_id = #{filterEntity.ID}
				</if>
			</if>
		</where>
	</select>
	<select id="countAll" resultType="int">
		<include refid="defaultCount" />
	</select>

	<update id="update" parameterType="BankEntity" >
		update bank  
	    <set>
	      <if test="bankCode != null">bank_code = #{bankCode},</if>
	      <if test="bankAbbreviation != null">bank_abbr = #{bankAbbreviation},</if>
	      <if test="bankName != null">bank_name = #{bankName},</if>
	      <if test="bankBranch != null">bank_branch = #{bankBranch},</if>
	      <if test="bankURL != null">bank_url = #{bankURL},</if>
	      <if test="comments != null">comments = #{comments},</if>
	      <if test="createDate != null">create_date = #{createDate},</if>
	      <if test="updateDate != null">update_date = #{updateDate},</if>
	      <if test="ownerId != null">owner_id = #{ownerId},</if>
	    </set>
		where bank_id = #{ID}
	</update>
	
	<delete id="delete" parameterType="string" >
		DELETE FROM bank WHERE bank_id = #{ID}
	</delete>

</mapper>