<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- https://ibatis.apache.org/docs/dotnet/datamapper/ch03s03.html -->

<mapper namespace="com.aurfy.haze.dao.perm.RowScopeMapper">
	<resultMap id="rowScopeMap" type="RowScopeEntity">
		<id column="row_scope_id" property="ID" />
		<result column="entity_name" property="entityName" />
		<result column="table_clause" property="tableClause" />
		<result column="where_clause" property="whereClause" />
		<result column="row_comments" property="comments" />
		<result column="row_perm_entry_id" property="permEntryId" />
		<result column="row_entry_key" property="permEntryKey" />
		<result column="row_cr_date" property="createDate" jdbcType="TIMESTAMP" javaType="Date" />
		<result column="row_up_date" property="updateDate" jdbcType="TIMESTAMP" javaType="Date" />
	</resultMap>
	
	<insert id="insert" parameterType="RowScopeEntity">
		INSERT INTO p_row_scope
			(row_scope_id, entity_name, table_clause, where_clause, comments, 
				create_date, update_date, perm_entry_id)
		VALUES
			(#{ID}, #{entityName}, #{tableClause}, #{whereClause}, #{comments}, 
				#{createDate}, #{updateDate}, #{permEntryId})
	</insert>
	
	<sql id="defaultSelect">
		SELECT  prs.row_scope_id, prs.entity_name, prs.table_clause, 
				prs.where_clause, prs.comments row_comments, 
				prs.create_date row_cr_date, prs.update_date row_up_date,
				prs.perm_entry_id row_perm_entry_id, entry.entry_key row_entry_key
		FROM p_row_scope prs 
			left join p_perm_entry entry on prs.perm_entry_id = entry.perm_entry_id
	</sql>
	
	<select id="selectOne" parameterType="string" resultMap="rowScopeMap" > 
		<include refid="defaultSelect" />
		WHERE prs.row_scope_id = #{ID}
	</select>
	
	<select id="selectBy" resultMap="rowScopeMap">
		<include refid="defaultSelect" />
		<where>
			<if test="filterEntity != null">
				<if test="filterEntity.ID != null">
					prs.row_scope_id = #{filterEntity.ID}
				</if>
				<if test="filterEntity.entityName != null">
					AND prs.entity_name like "%"#{filterEntity.entityName}"%"
				</if>
				<if test="filterEntity.tableClause != null">
					AND prs.table_clause = #{filterEntity.tableClause}
				</if>
				<if test="filterEntity.whereClause != null">
					AND prs.where_clause = #{filterEntity.whereClause}
				</if>
				<if test="filterEntity.createDate != null">
					AND prs.create_date = #{filterEntity.createDate}
				</if>
				<if test="filterEntity.updateDate != null">
					AND prs.update_date = #{filterEntity.updateDate}
				</if>
				<if test="filterEntity.permEntryId != null">
					AND prs.perm_entry_id = #{filterEntity.permEntryId}
				</if>
			</if>
		</where>
		LIMIT #{startIndex}, #{fetchRows}
	</select>
	
	<select id="selectAll" resultMap="rowScopeMap" > 
		<include refid="defaultSelect" />
		ORDER BY prs.perm_entry_id
	</select>
	
	<sql id="defaultCount">
		SELECT count(*) FROM p_row_scope
	</sql>
	
	<select id="countBy" parameterType="RowScopeEntity" resultType="int">
		<include refid="defaultCount" />
		<where>
			<if test="filterEntity != null">
				<if test="filterEntity.entityName != null">
					AND entity_name = #{filterEntity.entityName}
				</if>
				<if test="filterEntity.tableClause != null">
					AND table_clause = #{filterEntity.tableClause}
				</if>
				<if test="filterEntity.permEntryId != null">
					AND perm_entry_id = #{filterEntity.permEntryId}
				</if>
			</if>
		</where>
	</select>
	
	<select id="countAll" resultType="int">
		<include refid="defaultCount" />
	</select>
	
	<update id="update" parameterType="RowScopeEntity">
		UPDATE p_row_scope
		<set>		
			<if test="entityName != null">entity_name=#{entityName}, </if>
			<if test="tableClause != null">table_clause=#{tableClause}, </if>
			<if test="whereClause != null">where_clause=#{whereClause}, </if>
			<if test="comments != null">comments=#{comments}, </if>
			<if test="createDate != null">create_date=#{createDate}, </if>
			<if test="updateDate != null">update_date=#{updateDate}, </if>
			<if test="permEntryId != null">perm_entry_id=#{permEntryId}, </if>
		</set>
			WHERE 
				row_scope_id = #{ID}
	</update>
	
	<delete id="delete" parameterType="string">
		DELETE FROM p_row_scope WHERE row_scope_id = #{ID}
	</delete>
	
</mapper>