<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- https://ibatis.apache.org/docs/dotnet/datamapper/ch03s03.html -->

<mapper namespace="com.aurfy.haze.dao.infra.mer.SaleMapper">

	<!-- result maps -->
	<resultMap id="saleMap" type="SaleEntity">
		<id column="sales_id" property="ID" />
		<result column="user_id" property="userId" />
		<result column="rate_config_id" property="rateConfigId" />
		<result column="sale_comments" property="comments" />
		<result column="sale_create_date" property="createDate" jdbcType="TIMESTAMP" javaType="Date" />
		<result column="sale_update_date" property="updateDate" jdbcType="TIMESTAMP" javaType="Date" />
	</resultMap>

	<insert id="insert" parameterType="SaleEntity">
		INSERT INTO sales
		(sales_id, user_id, rate_config_id, comments, create_date, update_date)
		VALUES
		(#{ID}, #{userId}, #{rateConfigId}, #{comments}, #{createDate}, #{updateDate})
	</insert>

	<sql id="defaultSelect">
		SELECT
		sale.sales_id, sale.user_id, sale.rate_config_id,
		sale.comments sale_comments, sale.create_date sale_create_date, sale.update_date sale_update_date
		FROM sales sale 
	</sql>
	
	<select id="selectOne" parameterType="string" resultMap="saleMap">
		<include refid="defaultSelect" />
		WHERE sale.sales_id = #{ID}
	</select>
	
	<select id="selectBy" resultMap="saleMap">
		<include refid="defaultSelect" />
		<where>
			<if test="filterEntity!=null">
				<if test="filterEntity.ID !=null">
					sale.sales_id = #{filterEntity.ID}
				</if>
				<if test="filterEntity.userId != null">
					AND sale.user_id = #{filterEntity.userId}
				</if>
				<if test="filterEntity.rateConfigId != null">
					AND sale.rate_config_id = #{filterEntity.rateConfigId}
				</if>
				<if test="filterEntity.comments!=null">
					AND sale.comments like "%"#{filterEntity.comments}"%"
				</if>
				<if test="filterEntity.createDate !=null">
					AND sale.create_date = #{filterEntity.createDate}
				</if>
				<if test="filterEntity.updateDate !=null">
					AND sale.update_date = #{filterEntity.updateDate}
				</if>
			</if>
		</where>
		LIMIT #{startIndex}, #{fetchRows}
	</select>
	
	<select id="selectAll" resultMap="saleMap">
		<include refid="defaultSelect" />
	</select>

	<sql id="defaultCount">
		SELECT count(*) FROM sales sale
	</sql>
	
	<select id="countBy" resultType="int">
		<include refid="defaultCount" />
		<where>
			<if test="filterEntity!=null">
				<if test="filterEntity.userId != null">
					sale.user_id = #{filterEntity.userId}
				</if>
				<if test="filterEntity.rateConfigId != null">
					AND sale.rate_config_id = #{filterEntity.rateConfigId}
				</if>
			</if>
		</where>
	</select>
	
	<select id="countAll" resultType="int">
		<include refid="defaultCount" />
	</select>

	<update id="update" parameterType="SaleEntity">
		UPDATE sales
		<set>
			<if test="userId != null">user_id = #{userId},</if>
			<if test="rateConfigId != null">rate_config_id = #{rateConfigId},</if>
			<if test="comments != null">comments = #{comments},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="createDate != null">update_date = #{updateDate},</if>
		</set>
		WHERE sales_id = #{ID}
	</update>

	<delete id="delete" parameterType="string">
		DELETE FROM sales WHERE sales_id = #{ID}
	</delete>

</mapper>