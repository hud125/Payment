<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- https://ibatis.apache.org/docs/dotnet/datamapper/ch03s03.html -->

<mapper namespace="com.aurfy.haze.dao.infra.PasswordRecoveryMapper">

	<!-- result maps -->
	<resultMap id="passwordRecoveryMap" type="PasswordRecoveryEntity">
		<id column="user_id" property="ID" />
		<result column="auth_key" property="authKey" />
		<result column="expiry_date" property="expiryDate" jdbcType="TIMESTAMP" javaType="Date" />
		<result column="pwr_cr_dt" property="createDate" jdbcType="TIMESTAMP" javaType="Date" />
		<result column="pwr_up_dt" property="updateDate" jdbcType="TIMESTAMP" javaType="Date" />
	</resultMap>

	<insert id="insert" parameterType="PasswordRecoveryEntity" >
		INSERT INTO password_recovery 
		(user_id, auth_key, expiry_date, create_date, update_date)
		VALUES 
		(#{ID}, #{authKey}, #{expiryDate}, #{createDate}, #{updateDate})
	</insert>

	<sql id="defaultSelect">
		SELECT user_id, auth_key, expiry_date, create_date pwr_cr_dt, update_date pwr_up_dt
		FROM password_recovery
	</sql>
	<select id="selectOne" parameterType="string" resultMap="passwordRecoveryMap">
		<include refid="defaultSelect"/>
		WHERE user_id = #{ID}
	</select>

	<select id="selectByAuthkey" parameterType="string" resultMap="passwordRecoveryMap">
		<include refid="defaultSelect"/>
		WHERE auth_key = #{authKey}
	</select>
	
	<select id="countBy" resultType="int">
		<include refid="defaultSelect"/>
		 
	</select>

	<select id="selectBy" resultMap="passwordRecoveryMap">
		<include refid="defaultSelect"/>
		LIMIT #{startIndex}, #{fetchRows}
	</select>

	<select id="selectAll" resultMap="passwordRecoveryMap">
		<include refid="defaultSelect"/>
	</select>

	<update id="update" parameterType="PasswordRecoveryEntity">
		UPDATE password_recovery 
		<set>
	      <if test="authKey != null">auth_key = #{authKey},</if>
	      <if test="expiryDate != null">expiry_date = #{expiryDate},</if>
	      <if test="createDate != null">create_date = #{createDate},</if>
	      <if test="updateDate != null">update_date = #{updateDate},</if>
	    </set>
		WHERE user_id = #{ID}
	</update>

	<delete id="delete" parameterType="string">
		DELETE FROM password_recovery WHERE user_id = #{ID}
	</delete>

</mapper>